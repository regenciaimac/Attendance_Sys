import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

//
import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Scanner;
import javax.swing.JFileChooser;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
/**
 *
 * @author Imac
 */
public class Attendance extends javax.swing.JFrame implements Runnable {

    int hour,second,minute;
    /**
     * Creates new form Attendance
     */
    public Attendance() {
        initComponents();
        Thread t = new Thread(this);
        t.start();
    }

    public void openFile(String file){
    try{
        File path = new File(file);
        Desktop.getDesktop().open(path);
    }
    catch(IOException ioe){
        System.out.println(ioe);
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtStudent = new javax.swing.JTextField();
        LTime = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnTimeIn = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnOut = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N

        jTable1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student Number", "Name", "Section", "Time In", "Time Out"
            }
        ));
        jTable1.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(652, 0, 550, 490));

        jPanel2.setBackground(new java.awt.Color(0, 0, 51));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ISCP.png"))); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 180, 200));

        jLabel3.setFont(new java.awt.Font("Georgia", 0, 48)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Student No.");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, -1, -1));

        jLabel4.setFont(new java.awt.Font("Georgia", 0, 48)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("ATTENDANCE");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 100, -1, -1));

        jLabel5.setFont(new java.awt.Font("Georgia", 0, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("RECORDER");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 160, -1, -1));

        txtStudent.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        txtStudent.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtStudentFocusGained(evt);
            }
        });
        txtStudent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStudentActionPerformed(evt);
            }
        });
        jPanel2.add(txtStudent, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 272, 250, 50));

        LTime.setFont(new java.awt.Font("Georgia", 0, 24)); // NOI18N
        LTime.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(LTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 30, 100, 30));

        btnExit.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        btnExit.setText("EXIT");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        jPanel2.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 540, 80, 40));

        btnSave.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        btnSave.setText("SAVE");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });
        jPanel2.add(btnSave, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 530, 140, 40));

        btnTimeIn.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        btnTimeIn.setText("TIME IN");
        btnTimeIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimeInActionPerformed(evt);
            }
        });
        jPanel2.add(btnTimeIn, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 360, 140, 40));

        btnDelete.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        btnDelete.setText("DELETE");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 530, 140, 40));

        btnClear.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        btnClear.setText("CLEAR");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });
        jPanel2.add(btnClear, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 530, 140, 40));

        btnOut.setFont(new java.awt.Font("Georgia", 0, 18)); // NOI18N
        btnOut.setText("TIME OUT");
        btnOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOutActionPerformed(evt);
            }
        });
        jPanel2.add(btnOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 360, 140, 40));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1200, 600));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtStudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStudentActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStudentActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        
        int RemoveItem = jTable1.getSelectedRow();
        if ( RemoveItem >= 0)
        {
            model.removeRow(RemoveItem);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
    // TODO add your handling code here:
    try{
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();
            if(saveFile != null)
            {
                saveFile = new File(saveFile.toString()+".xlsx");
                FileOutputStream out;
                try (Workbook wb = new XSSFWorkbook()) {
                    Sheet sheet = wb.createSheet("Student");
                    Row rowCol = sheet.createRow(0);
                    for(int i=0;i<jTable1.getColumnCount();i++){
                        Cell cell = rowCol.createCell(i);
                        cell.setCellValue(jTable1.getColumnName(i));
                    }   for(int j=0;j<jTable1.getColumnCount();j++)
                    {
                        Row row =  sheet.createRow(j);
                        for(int k=0;k<jTable1.getColumnCount();k++)
                        {
                            Cell cell = row.createCell(k);
                            if(jTable1.getValueAt(j,k)!= null)
                            {
                                cell.setCellValue(jTable1.getValueAt(j, k).toString());
                            }
                        }
                    }   out = new FileOutputStream(new File(saveFile.toString()));
                    wb.write(out);
                }
                out.close();
                openFile(saveFile.toString());
            }
            else{
            JOptionPane.showMessageDialog(null,"Error Save");
            }
        }
    
    catch(FileNotFoundException e){
        System.out.println(e);
    }
    catch(IOException io){
    System.out.println(io);
    }
    }//GEN-LAST:event_btnSaveActionPerformed
private JFrame frame;
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        frame = new JFrame("Exit");
        if(JOptionPane.showConfirmDialog(frame, "Confirm If you want to exit" , "", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION)
        {
            System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void btnOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOutActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String time = LTime.getText();
        if (jTable1.getSelectedRowCount() == 1){
        model.setValueAt (time,jTable1.getSelectedRow(),4);
        }
    }//GEN-LAST:event_btnOutActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnTimeInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimeInActionPerformed
        // TODO add your handling code here:
         /*DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        String number = txtStudent.getText();
        String in = LTime.getText();
        switch (number) {
            case "222058":
                model.addRow(new Object[]{"222058", "Carlos, Eric","BC2DA",in});
                break;
            case "221762":
                model.addRow(new Object[]{"221762", "Marquez, venus","BC2DA",in});
                break;
            case "221179":
                model.addRow(new Object[]{"221179", "Ferrer, MaryJoy","BC2DA",in});
                break;
            case "220334":
                model.addRow(new Object[]{"220334", "Regencia, Rheymark","BC2DA",in});
                break;
            case "221719":
                model.addRow(new Object[]{"221719", "Ico, Franchelene","BC2DA",in});
                break;
             case "221893":
                model.addRow(new Object[]{"221893", "Montemayor, Rolando","BC2DA",in});
                break;
             case "221892":
                model.addRow(new Object[]{"221892", "Caspe, Alijah","BC2DA",in});
                break;
             case "221043":
                model.addRow(new Object[]{"221043", "Bernales, John Mari","BC2DA",in});
                break;
            default:
                JOptionPane.showMessageDialog(null, "Invalid Student Number");
                break;
        }*/
     DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    String number = txtStudent.getText();
    String in = LTime.getText();

    try {
        File file = new File("src/Data.txt");
        Scanner scanner = new Scanner(file);

        while (scanner.hasNextLine()) {
            String line = scanner.nextLine();
            // Split the line into parts separated by commas (assuming CSV format)
            String[] parts = line.split("/");
            if (parts.length >= 3) {
                String studentNumber = parts[0];
                String name = parts[1];
                String section = parts[2];
               

                // Check if the student number matches the input
                if (studentNumber.trim().equals(number.trim())) {
                    // Add the data to the table
                    model.addRow(new Object[]{studentNumber, name, section, in});
                    break;
                }
            }
            else{
                    JOptionPane.showMessageDialog(null, "Invalid Student Number");
                    break;
                }
        }

        scanner.close();
    } catch (FileNotFoundException e) {
        e.printStackTrace();
    }
    
    }//GEN-LAST:event_btnTimeInActionPerformed

    private void txtStudentFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtStudentFocusGained
        // TODO add your handling code here:
        txtStudent.setText("");
    }//GEN-LAST:event_txtStudentFocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Attendance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LTime;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnOut;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnTimeIn;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtStudent;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        while(true){
        Calendar cal = Calendar.getInstance();
        hour= cal.get(Calendar.HOUR_OF_DAY);
        minute = cal.get(Calendar.MINUTE);
        second= cal.get(Calendar.SECOND);
        
        SimpleDateFormat sdf24 = new SimpleDateFormat("HH:mm:ss");
        Date dat = cal.getTime();
        String time24 = sdf24.format(dat);
        
        LTime.setText(time24);
        
        }
    }
}
